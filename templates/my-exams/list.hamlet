
<form method=get #formGetMyExam>

<div.mdc-list role=list data-mdc-auto-init=MDCList>
  $forall (Entity rid (Exam _ _ attempt start _),Entity _ (Test _ name _ pass _ _),Value score) <- tests
    <button.mdc-list-item.mdc-list-item--with-leading-thumbnail
      .mdc-list-item--with-three-lines.mdc-list-ietm--with-trailing-icon
      :pure rid == mrid:.mdc-list-item--activated role=listitem
      type=submit form=formGetMyExam formaction=@{MyExamR rid} 
      name=location
      :isJust mq:value="@{curr}?id=#{fromSqlKey rid}&q=#{fromJust mq}"
      :isNothing mq:value="@{curr}?id=#{fromSqlKey rid}"
      onclick="this.value = `${this.value}&scrollY=${window.scrollY}`">

      <span.mdc-list-item__ripple>
      <span.mdc-list-item__start>
        $if score >= pass
          <i.material-symbols-outlined.exam-status style="background-color:var(--color-pass)">
            thumb_up
        $else
          <i.material-symbols-outlined.exam-status style="background-color:var(--color-fail)">
            thumb_down
      <span.mdc-list-item__content>
        <div.mdc-list-item__primary-text>#{name}
        <div.mdc-list-item__secondary-text>
          _{MsgAttempt}: #{attempt}
        <div.mdc-list-item__secondary-text.examDate data-value=#{iso8601Show start}>
      <span.mdc-list-item__end>
        <i.material-symbols-outlined>arrow_forward_ios

    <li.mdc-list-divider role=separator>

$maybe _ <- mcid
  <a.mdc-fab.mdc-fab--extended.mdc-fab href=@{ExamFormR} role=button>
    <span.mdc-fab__ripple>
    <i.mdc-fab__icon.material-symbols-outlined>
      add
    <span.mdc-fab__label>
      _{MsgTakeNewExam}
